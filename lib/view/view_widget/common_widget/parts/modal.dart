import 'package:flutter/material.dart';import 'package:flutter_riverpod/flutter_riverpod.dart';import '../../../../providers.dart';class Modal {  ///共通モーダル[閉じ専]  static Future commonCloseModal(      BuildContext context, String ttl, String msg, WidgetRef ref) async {    await showDialog(      barrierDismissible: false,      context: context,      builder: (context) => AlertDialog(        title: Text(ttl),        content: Text(msg),        actions: [          TextButton(            onPressed: () {              Navigator.pop(context, false);            },            child: const Text(              "close",              style: TextStyle(fontWeight: FontWeight.bold),            ),          ),        ],      ),    );  }  ///通知モーダル[確認専]  static Future noticeModal(      BuildContext context, String ttl, String msg, WidgetRef ref) async {    //通知取得    List<String> notices = ref.watch(noticeListProvider);    await showDialog(      barrierDismissible: false,      context: context,      builder: (context) => AlertDialog(        title: Text(msg),        content: Column(          children: [            for (var notice in notices) Text("$notice\r\n"),          ],        ),        actions: [          TextButton(            onPressed: () {              // 確認済へ変更              ref.read(checkedNoticeProvider.notifier).state = true;              Navigator.pop(context, false);            },            child: const Text(              "確認しました",              style: TextStyle(fontWeight: FontWeight.bold),            ),          ),        ],      ),    );  }  ///共通モーダル[選択]  static Future commonModal(    BuildContext context,    String ttl,    String msg,    WidgetRef ref,    //yes押下時処理    Future<void> Function(BuildContext, WidgetRef) exeAction,    //no押下時処理    Future<void> Function(BuildContext, WidgetRef) cxlAction,  ) async {    await showDialog(      barrierDismissible: false,      context: context,      builder: (context) => AlertDialog(        title: Text(ttl),        content: Text(          msg,          style: const TextStyle(fontSize: 30, fontWeight: FontWeight.bold),        ),        actions: [          //はい押下時ー実行処理          TextButton(            onPressed: () {              exeAction(context, ref);            },            child: const Text(              "Yes",              style: TextStyle(                  fontWeight: FontWeight.bold, color: Colors.lightBlueAccent),            ),          ),          //いいえ押下時ー実行処理          TextButton(            onPressed: () {              cxlAction(context, ref);            },            child: const Text(              "Nop",              style: TextStyle(fontWeight: FontWeight.bold, color: Colors.red),            ),          ),        ],      ),    );  }}//コンタクト取る際-連絡しますか？-